version: '3'

services:
  db:
    image: postgres:12-bullseye
    container_name: pgres
    healthcheck:
      test: "exit 0"
    volumes:
      - ./db:/docker-entrypoint-initdb.d
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: root
      POSTGRES_PASSWORD: pwd
      POSTGRES_DB: socntw
    networks:
      - app-net

  api:
    build:
      context: .
      dockerfile: Dockerfile
    restart: on-failure
    volumes:
      - .:/go/src/api
    ports:
      - "8080:8080"
    environment:
      DB_HOST: db
      DB_USER: root
      DB_PASSWORD: pwd
      DB_NAME: socntw
    links:
      - db
    depends_on:
      - db
    networks:
      - app-net

  redis:
    image: redis:bookworm
    restart: always
    ports:
      - "6379:6379"
    volumes:
      - ./redisdata:/data
    networks:
      - app-net

  coordinator:
    image: citusdata/citus:alpine
    container_name: citus_coordinator
    ports:
      - "5433:5432"
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pwd
      POSTGRES_DB: cdb
      PGHOST: citus_coordinator
    networks:
      - app-net

  worker1:
    image: citusdata/citus:alpine
    container_name: worker1
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pwd
      POSTGRES_DB: cdb
      PGHOST: citus_coordinator
    networks:
      - app-net

  worker2:
    image: citusdata/citus:alpine
    container_name: worker2
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: pwd
      POSTGRES_DB: cdb
      PGHOST: citus_coordinator
    networks:
      - app-net

  zookeeper:
    image: confluentinc/cp-zookeeper:7.8.0
    hostname: zookeeper
    container_name: zookeeper
    ports:
      - "2181:2181"
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
      ZOOKEEPER_SERVER_ID: 1
      ZOOKEEPER_INIT_LIMIT: 3
      ZOOKEEPER_SYNC_LIMIT: 2
#    healthcheck:
#      test: ["CMD-SHELL", "nc -zv localhost 2181"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
    networks:
      - app-net

  kafka1:
    image: confluentinc/cp-server:7.8.0
    hostname: kafka1
    container_name: kafka1
    depends_on:
      - zookeeper
    ports:
      - "9091:9091"
      - "29091:29091"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: 'zookeeper:2181'
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka1:29091 #,PLAINTEXT_HOST://localhost:9091
#    healthcheck:
#      test: ["CMD-SHELL", "kafka-topics --bootstrap-server kafka1:29091 --list || exit 1"]
#      interval: 10s
#      timeout: 5s
#      retries: 5
    networks:
      - app-net

  kafka-ui:
    container_name: kafka-ui
    image: provectuslabs/kafka-ui:v0.7.2
    ports:
      - 9020:8080
    environment:
      AUTH_TYPE: DISABLED
      KAFKA_CLUSTERS_0_NAME: local
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka1:29091
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    depends_on:
      - kafka1
    networks:
      - app-net

networks:
  app-net:
    driver: bridge

volumes:
  db_data: